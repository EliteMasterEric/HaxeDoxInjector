// Generated by Haxe 5.0.0-alpha.1+5c05e6d
#include <hxcpp.h>

#ifndef INCLUDED_test_MyClassTwo
#include <test/MyClassTwo.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9a2bf8c8c5106807_18_new,"test.MyClassTwo","new",0x1103356e,"test.MyClassTwo.new","test/MyClass.hx",18,0x730e2f0f)
namespace test{

void MyClassTwo_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_9a2bf8c8c5106807_18_new)
HXDLIN(  18)		this->myField = HX_("Hello World",84,f6,db,6f);
            	}

Dynamic MyClassTwo_obj::__CreateEmpty() { return new MyClassTwo_obj; }

void *MyClassTwo_obj::_hx_vtable = 0;

Dynamic MyClassTwo_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< MyClassTwo_obj > _hx_result = new MyClassTwo_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MyClassTwo_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5f8bdcb2;
}


MyClassTwo_obj::MyClassTwo_obj()
{
}

void MyClassTwo_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MyClassTwo);
	HX_MARK_MEMBER_NAME(myField,"myField");
	HX_MARK_END_CLASS();
}

void MyClassTwo_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(myField,"myField");
}

::hx::Val MyClassTwo_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"myField") ) { return ::hx::Val( myField ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val MyClassTwo_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"myField") ) { myField=inValue.Cast< ::String >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MyClassTwo_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("myField",ae,3d,93,a9));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo MyClassTwo_obj_sMemberStorageInfo[] = {
	{::hx::fsString,(int)offsetof(MyClassTwo_obj,myField),HX_("myField",ae,3d,93,a9)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *MyClassTwo_obj_sStaticStorageInfo = 0;
#endif

static ::String MyClassTwo_obj_sMemberFields[] = {
	HX_("myField",ae,3d,93,a9),
	::String(null()) };

::hx::Class MyClassTwo_obj::__mClass;

void MyClassTwo_obj::__register()
{
	MyClassTwo_obj _hx_dummy;
	MyClassTwo_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("test.MyClassTwo",7c,a6,4c,f2);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(MyClassTwo_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< MyClassTwo_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MyClassTwo_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MyClassTwo_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace test
